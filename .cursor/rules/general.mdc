---
description: 
globs: 
alwaysApply: true
---
# General guidelines
- **ALWAYS** use `pnpm` for running Node.js tasks (like `pnpm install <package>`, `pnpm test`, etc.)
- Do not write code comments about *what* something is/does, unless it would be very difficult to understand and cannot be simplified
- Write code comments on *why* something was done, but *only* if it appears strange/unnecessary/overly complicated
- Do not ask me to review files with multiple TypeScript issues, they should be fixed beforehand
- For class fields and methods:
  - Use `#` notation for private fields/methods instead of the `private` keyword
  - Do not use the `public` keyword (methods/fields are public by default)
- Consider using universal utilities from `src/utils/` instead of writing custom logic, including but not limited to:
  - `isObject()` for type-safe object checking
  - `getEnvironmentVariable()` for accessing environment variables with type safety
  - `snakeToCamelCase()` for string case conversion
  - Other utilities available in the utils directory

## Constants
- Reusable constants (URLs, IDs, configuration values, timeouts) should be defined as CONSTANT_CASE constants at the top of the file, after imports
	- Example: `const CACHE_WRITE_BUFFER_MS = 5000;`
- Constants should be placed before any other code or initialization
- **Always include units in constant names** to make the value type clear:
	- Time: `_MS` (milliseconds), `_SEC` (seconds), `_MIN` (minutes)
	- Size: `_BYTES`, `_KB`, `_MB`, `_GB`
	- Examples: `MAX_FILE_SIZE_BYTES`, `REQUEST_TIMEOUT_MS`